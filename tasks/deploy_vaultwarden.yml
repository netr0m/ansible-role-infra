---
- name: Ensure vaultwarden directory is present
  ansible.builtin.file:
    path: "{{ infra_vaultwarden_directory_path }}"
    state: directory
    owner: "{{ infra_vaultwarden_directory_owner }}"
    group: "{{ infra_vaultwarden_directory_group }}"
    mode: "{{ infra_vaultwarden_directory_mode }}"

- name: Add Authentik auth middleware
  when: infra_vaultwarden_use_authentik
  ansible.builtin.set_fact:
    infra_vaultwarden_traefik_middlewares: "{{ infra_vaultwarden_traefik_middlewares + [infra_vaultwarden_auth_mwr] }}"

- name: Manage service files
  block:
    - name: Write vaultwarden environment variables to file
      ansible.builtin.template:
        src: template.env.j2
        dest: "{{ infra_vaultwarden_env_file_path }}"
        owner: "{{ infra_vaultwarden_directory_owner }}"
        group: "{{ infra_vaultwarden_directory_group }}"
        mode: "{{ infra_vaultwarden_env_file_mode }}"
        backup: true
      vars:
        _env_vars: "{{ infra_vaultwarden_settings | combine(infra_vaultwarden_env_vars) }}"
      register: vaultwarden_env_file_output

    - name: Copy compose services file into place
      ansible.builtin.template:
        src: compose/vaultwarden.yml.j2
        dest: "{{ infra_vaultwarden_compose_path }}"
        owner: "{{ infra_vaultwarden_directory_owner }}"
        group: "{{ infra_vaultwarden_directory_group }}"
        mode: "{{ infra_vaultwarden_file_mode }}"
        backup: true
        validate: docker compose -f %s config -q
      register: compose_file_output

- name: Take down services due to changed compose file
  community.docker.docker_compose_v2:
    project_src: "{{ infra_vaultwarden_directory_path }}"
    files: "{{ compose_file_output.backup_file }}"
    state: absent
    remove_orphans: true
  when: compose_file_output.backup_file is defined

- name: Pull container images
  community.docker.docker_image:
    name: "{{ item }}"
    source: pull
  with_items:
    - "{{ infra_vaultwarden_container_image }}"

- name: Deploy vaultwarden services
  community.docker.docker_compose_v2:
    project_src: "{{ infra_vaultwarden_directory_path }}"
    state: "{{ 'present' if infra_use_vaultwarden else 'absent' }}"
    wait: true
    wait_timeout: "{{ infra_compose_wait_timeout }}"
  register: deploy_vaultwarden_services_output

- name: Add docker-volume-backup entries
  when: infra_backup_enabled
  ansible.builtin.set_fact:
    infra_docker_volume_backup_services_vaultwarden:
      - service: "{{ infra_vaultwarden_service_name }}"
        volumes:
          - "{{ infra_vaultwarden_volume_name_data }}"
        stop:
          - "{{ infra_vaultwarden_service_name }}"
...
