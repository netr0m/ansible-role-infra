---
- name: Ensure vaultwarden log directory is present
  ansible.builtin.file:
    path: "{{ infra_vaultwarden_directories.log.path }}"
    state: directory
    owner: "{{ infra_vaultwarden_directories.log.owner | default(infra_subdirectories.log.owner) | default(infra_directory.owner) }}"
    group: "{{ infra_vaultwarden_directories.log.group | default(infra_subdirectories.log.group) | default(infra_directory.group) }}"
    mode: "{{ infra_vaultwarden_directories.log.mode | default(infra_subdirectories.log.mode) | default(infra_directory.mode) }}"

- name: Ensure vaultwarden data directory is present
  ansible.builtin.file:
    path: "{{ infra_vaultwarden_directories.data.path }}"
    state: directory
    owner: "{{ infra_vaultwarden_directories.data.owner | default(infra_subdirectories.data.owner) | default(infra_directory.owner) }}"
    group: "{{ infra_vaultwarden_directories.data.group | default(infra_subdirectories.data.group) | default(infra_directory.group) }}"
    mode: "{{ infra_vaultwarden_directories.data.mode | default(infra_subdirectories.data.mode) | default(infra_directory.mode) }}"

- name: Deploy vaultwarden service
  community.docker.docker_container:
    image: "{{ infra_vaultwarden_container.image }}"
    name: "{{ infra_vaultwarden_container.hostname }}"
    hostname: "{{ infra_vaultwarden_container.hostname }}"
    restart_policy: "{{ infra_vaultwarden_container.restart_policy | default(infra_restart_policy) }}"
    volumes:
      - "{{ infra_vaultwarden_directories.log.path }}:/data/logs"
      - "{{ infra_vaultwarden_directories.data.path }}:/data"
    labels:
      traefik.enable: 'true'
      # HTTP => HTTPS redirect
      traefik.http.middlewares.redirect-https-mwr.redirectScheme.scheme: https
      traefik.http.middlewares.redirect-https-mwr.redirectScheme.permanent: 'true'
      # Web UI
      traefik.http.services.vaultwarden-ui-http-svc.loadbalancer.server.port: "80"
      traefik.http.services.vaultwarden-ui-ws-svc.loadbalancer.server.port: "3012"
      # HTTPS
      traefik.http.routers.vaultwarden-ui-https-rtr.rule: "Host(\"{{ infra_vaultwarden_container.hostname }}.{{ svc_domain }}\")"
      traefik.http.routers.vaultwarden-ui-https-rtr.entrypoints: webSecure
      traefik.http.routers.vaultwarden-ui-https-rtr.service: vaultwarden-ui-http-svc
      traefik.http.routers.vaultwarden-ui-https-rtr.tls.certresolver: "{{ svc_traefik_dns_challenge_provider | default('cloudflare') }}"
      # HTTP
      traefik.http.routers.vaultwarden-ui-http-rtr.rule: "Host(\"{{ infra_vaultwarden_container.hostname }}.{{ svc_domain }}\")"
      traefik.http.routers.vaultwarden-ui-http-rtr.entrypoints: web
      traefik.http.routers.vaultwarden-ui-http-rtr.service: vaultwarden-ui-http-svc
      traefik.http.routers.vaultwarden-ui-http-rtr.middlewares: redirect-https-mwr
      # WSS
      traefik.http.routers.vaultwarden-ui-wss-rtr.rule: "Host(\"{{ infra_vaultwarden_container.hostname }}.{{ svc_domain }}\") && Path(\"/notifications/hub\")"
      traefik.http.routers.vaultwarden-ui-wss-rtr.entrypoints: webSecure
      traefik.http.routers.vaultwarden-ui-wss-rtr.service: vaultwarden-ui-ws-svc
      traefik.http.routers.vaultwarden-ui-wss-rtr.tls.certresolver: "{{ svc_traefik_dns_challenge_provider | default('cloudflare') }}"
      # WS
      traefik.http.routers.vaultwarden-ui-ws-rtr.rule: "Host(\"{{ infra_vaultwarden_container.hostname }}.{{ svc_domain }}\") && Path(\"/notifications/hub\")"
      traefik.http.routers.vaultwarden-ui-ws-rtr.entrypoints: web
      traefik.http.routers.vaultwarden-ui-ws-rtr.service: vaultwarden-ui-ws-svc
      traefik.http.routers.vaultwarden-ui-ws-rtr.middlewares: redirect-https-mwr
    env: "{{ infra_vaultwarden_env_vars }}"
    memory: "{{ infra_vaultwarden_container.memory | default('2g') }}"
    log_driver: "{{ svc_log_driver }}"
    log_options: "{{ svc_log_options }}"
...
