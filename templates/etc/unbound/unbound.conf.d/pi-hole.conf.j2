# {{ ansible_managed }}
server:
    verbosity: {{ infra_unbound_verbosity }}

    interface: {{ infra_unbound_listening_iface }}
{% if infra_unbound_restrict_access %}
{% for _subnet in infra_unbound_access_control_allowed_subnets %}
    access-control: {{ _subnet }} allow
{% endfor %}
{% if infra_unbound_docker_network_subnet is defined %}
    access-control: {{ infra_unbound_docker_network_subnet }} allow
{% endif %}
{% endif %}
    port: {{ infra_unbound_listening_port }}
    do-ip4: {{ infra_unbound_ipv4 }}
    do-ip6: {{ infra_unbound_ipv6 }}
    do-udp: {{ infra_unbound_udp }}
    do-tcp: {{ infra_unbound_tcp }}

    # You want to leave this to no unless you have *native* IPv6. With 6to4 and
    # Terredo tunnels your web browser should favor IPv4 for the same reasons
    prefer-ip6: {{ infra_unbound_prefer_ipv6 }}

    # Trust glue only if it is within the server's authority
    harden-glue: {{ infra_unbound_harden_glue }}

    # Require DNSSEC data for trust-anchored zones, if such data is absent, the zone becomes BOGUS
    harden-dnssec-stripped: {{ infra_unbound_harden_dnssec_stripped }}

    # Don't use Capitalization randomization as it known to cause DNSSEC issues sometimes
    # see https://discourse.pi-hole.net/t/unbound-stubby-or-dnscrypt-proxy/9378 for further details
    use-caps-for-id: no

    # Reduce EDNS reassembly buffer size.
    # IP fragmentation is unreliable on the Internet today, and can cause
    # transmission failures when large DNS messages are sent via UDP. Even
    # when fragmentation does work, it may not be secure; it is theoretically
    # possible to spoof parts of a fragmented DNS message, without easy
    # detection at the receiving end. Recently, there was an excellent study
    # >>> Defragmenting DNS - Determining the optimal maximum UDP response size for DNS <<<
    # by Axel Koolhaas, and Tjeerd Slokker (https://indico.dns-oarc.net/event/36/contributions/776/)
    # in collaboration with NLnet Labs explored DNS using real world data from the
    # the RIPE Atlas probes and the researchers suggested different values for
    # IPv4 and IPv6 and in different scenarios. They advise that servers should
    # be configured to limit DNS messages sent over UDP to a size that will not
    # trigger fragmentation on typical network links. DNS servers can switch
    # from UDP to TCP when a DNS response is too big to fit in this limited
    # buffer size. This value has also been suggested in DNS Flag Day 2020.
    edns-buffer-size: {{ infra_unbound_edns_buffer_size }}

    # Perform prefetching of close to expired message cache entries
    # This only applies to domains that have been frequently queried
    prefetch: {{ infra_unbound_prefetch }}

    # One thread should be sufficient, can be increased on beefy machines. In reality for most users running on small networks or on a single machine, it should be unnecessary to seek performance enhancement by increasing num-threads above 1.
    num-threads: 1

    # Ensure kernel buffer is large enough to not lose messages in traffic spikes
    so-rcvbuf: 1m

    # Ensure privacy of local IP ranges
    private-address: 192.168.0.0/16
    private-address: 169.254.0.0/16
    private-address: 172.16.0.0/12
    private-address: 10.0.0.0/8
    private-address: fd00::/8
    private-address: fe80::/10
