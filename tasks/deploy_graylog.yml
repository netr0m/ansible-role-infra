---
- name: Ensure graylog directory is present
  ansible.builtin.file:
    path: "{{ infra_graylog_directory_path }}"
    state: directory
    owner: "{{ infra_graylog_directory_owner }}"
    group: "{{ infra_graylog_directory_group }}"
    mode: "{{ infra_graylog_directory_mode }}"

- name: Manage service files
  block:
    - name: Write graylog DB password secret to file
      ansible.builtin.template:
        src: secret.j2
        dest: "{{ infra_graylog_db_password_file_path }}"
        owner: "{{ infra_graylog_directory_owner }}"
        group: "{{ infra_graylog_db_password_secret_file_group }}"
        mode: "{{ infra_graylog_secret_file_mode }}"
        backup: true
      vars:
        _secret: "{{ infra_graylog_db_password }}"
      register: graylog_db_password_file_output

    - name: Write graylog password secret (pepper) secret to file
      ansible.builtin.template:
        src: secret.j2
        dest: "{{ infra_graylog_password_secret_file_path }}"
        owner: "{{ infra_graylog_directory_owner }}"
        group: "{{ infra_graylog_directory_group }}"
        mode: "{{ infra_graylog_secret_file_mode }}"
        backup: true
      vars:
        _secret: "{{ infra_graylog_password_secret}}"
      register: graylog_password_secret_file_output

    - name: Write graylog password sha2 (hash) secret to file
      ansible.builtin.template:
        src: secret.j2
        dest: "{{ infra_graylog_password_sha2_file_path }}"
        owner: "{{ infra_graylog_directory_owner }}"
        group: "{{ infra_graylog_directory_group }}"
        mode: "{{ infra_graylog_secret_file_mode }}"
        backup: true
      vars:
        _secret: "{{ infra_graylog_password_sha2 }}"
      register: graylog_password_sha2_file_output

    - name: Write graylog MongoDB URI secret to file
      ansible.builtin.template:
        src: secret.j2
        dest: "{{ infra_graylog_mongodb_uri_file_path }}"
        owner: "{{ infra_graylog_directory_owner }}"
        group: "{{ infra_graylog_directory_group }}"
        mode: "{{ infra_graylog_secret_file_mode }}"
        backup: true
      vars:
        _secret: "{{ infra_graylog_mongodb_uri }}"
      register: graylog_mongodb_uri_file_output

    - name: Write graylog environment variables to file
      ansible.builtin.template:
        src: template.env.j2
        dest: "{{ infra_graylog_env_file_path }}"
        owner: "{{ infra_graylog_directory_owner }}"
        group: "{{ infra_graylog_directory_group }}"
        mode: "{{ infra_graylog_env_file_mode }}"
        backup: true
      vars:
        _env_vars: "{{ infra_graylog_settings | combine(infra_graylog_env_vars_shared) | combine(infra_graylog_env_vars) }}"
      register: graylog_env_file_output

    - name: Write graylog DB environment variables to file
      ansible.builtin.template:
        src: template.env.j2
        dest: "{{ infra_graylog_db_env_file_path }}"
        owner: "{{ infra_graylog_directory_owner }}"
        group: "{{ infra_graylog_directory_group }}"
        mode: "{{ infra_graylog_env_file_mode }}"
        backup: true
      vars:
        _env_vars: "{{ infra_graylog_env_vars_shared | combine(infra_graylog_db_env_vars) }}"
      register: graylog_db_env_file_output

    - name: Write graylog opensearch environment variables to file
      ansible.builtin.template:
        src: template.env.j2
        dest: "{{ infra_graylog_opensearch_env_file_path }}"
        owner: "{{ infra_graylog_directory_owner }}"
        group: "{{ infra_graylog_directory_group }}"
        mode: "{{ infra_graylog_env_file_mode }}"
        backup: true
      vars:
        _env_vars: "{{ infra_graylog_env_vars_shared | combine(infra_graylog_opensearch_env_vars) }}"
      register: graylog_opensearch_env_file_output

    - name: Copy compose services file into place
      ansible.builtin.template:
        src: compose/graylog.yml.j2
        dest: "{{ infra_graylog_compose_path }}"
        owner: "{{ infra_graylog_directory_owner }}"
        group: "{{ infra_graylog_directory_group }}"
        mode: "{{ infra_graylog_directory_mode }}"
        backup: true
        validate: docker compose -f %s config -q
      register: compose_file_output

- name: Take down services due to changed compose file
  community.docker.docker_compose_v2:
    project_src: "{{ infra_graylog_directory_path }}"
    files: "{{ compose_file_output.backup_file }}"
    state: absent
    remove_orphans: true
  when: compose_file_output.backup_file is defined

- name: Pull container images
  community.docker.docker_image:
    name: "{{ item }}"
    source: pull
  with_items:
    - "{{ infra_graylog_db_container_image }}"
    - "{{ infra_graylog_opensearch_container_image }}"
    - "{{ infra_graylog_container_image }}"

- name: Deploy graylog services
  community.docker.docker_compose_v2:
    project_src: "{{ infra_graylog_directory_path }}"
    state: "{{ 'present' if infra_use_graylog else 'absent' }}"
    wait: true
    wait_timeout: "{{ infra_compose_wait_timeout }}"
  register: deploy_graylog_services_output
...
