---
- name: Ensure wireguard directory is present
  ansible.builtin.file:
    path: "{{ infra_wireguard_directory_path }}"
    state: directory
    owner: "{{ infra_wireguard_directory_owner }}"
    group: "{{ infra_wireguard_directory_group }}"
    mode: "{{ infra_wireguard_directory_mode }}"

- name: Add Authentik auth middleware
  when: infra_wireguard_ui_use_authentik
  ansible.builtin.set_fact:
    infra_wireguard_ui_traefik_middlewares: "{{ infra_wireguard_ui_traefik_middlewares + [infra_wireguard_auth_mwr] }}"

- name: Add Pihole as a DNS server for wireguard
  when: infra_wireguard_use_pihole_dns and infra_use_pihole
  block:
    - name: Get pihole container settings
      block:
        - name: Query for pihole container
          community.docker.docker_container_info:
            name: "{{ infra_pihole_service_name }}"
          register: pihole_container_output

        - name: Set pihole container IP fact
          ansible.builtin.set_fact:
            pihole_container_ip: "{{ pihole_container_output.container.NetworkSettings.Networks[svc_docker_network_name].IPAddress }}"

    - name: Update the DNS server variable to include pihole
      when: pihole_container_ip is defined
      ansible.builtin.set_fact:
        infra_wireguard_dns_servers: "{{ [pihole_container_ip] + infra_wireguard_container_dns_servers }}"

- name: Manage service files
  block:
    - name: Write session-secret secret to file
      ansible.builtin.lineinfile:
        path: "{{ infra_wireguard_ui_session_secret_file_path }}"
        line: "{{ infra_wireguard_ui_session_secret }}"
        owner: "{{ infra_wireguard_directory_owner }}"
        group: "{{ infra_wireguard_directory_group }}"
        mode: "{{ infra_wireguard_secret_file_mode }}"
        create: true
      register: wgui_session_secret_file_output

    - name: Write admin-password secret to file
      ansible.builtin.lineinfile:
        path: "{{ infra_wireguard_ui_admin_password_file_path }}"
        line: "{{ infra_wireguard_ui_password }}"
        owner: "{{ infra_wireguard_directory_owner }}"
        group: "{{ infra_wireguard_directory_group }}"
        mode: "{{ infra_wireguard_secret_file_mode }}"
        create: true
      register: wgui_admin_password_file_output

    - name: Write Wireguard environment variables to file
      ansible.builtin.template:
        src: template.env.j2
        dest: "{{ infra_wireguard_env_file_path }}"
        owner: "{{ infra_wireguard_directory_owner }}"
        group: "{{ infra_wireguard_directory_group }}"
        mode: "{{ infra_wireguard_env_file_mode }}"
        backup: true
      vars:
        _env_vars: "{{ infra_wireguard_settings | combine(infra_wireguard_env_vars) }}"
      register: wg_env_file_output

    - name: Write Wireguard-UI environment variables to file
      ansible.builtin.template:
        src: template.env.j2
        dest: "{{ infra_wireguard_ui_env_file_path }}"
        owner: "{{ infra_wireguard_directory_owner }}"
        group: "{{ infra_wireguard_directory_group }}"
        mode: "{{ infra_wireguard_env_file_mode }}"
        backup: true
      vars:
        _env_vars: "{{ infra_wireguard_ui_settings | combine(infra_wireguard_ui_env_vars) }}"
      register: wgui_env_file_output

    - name: Copy compose services file into place
      ansible.builtin.template:
        src: compose/wireguard.yml.j2
        dest: "{{ infra_wireguard_compose_path }}"
        owner: "{{ infra_wireguard_directory_owner }}"
        group: "{{ infra_wireguard_directory_group }}"
        mode: "{{ infra_wireguard_file_mode }}"
        backup: true
        validate: docker compose -f %s config -q
      register: compose_file_output

- name: Take down services due to changed compose file
  community.docker.docker_compose_v2:
    project_src: "{{ infra_wireguard_directory_path }}"
    files: "{{ compose_file_output.backup_file }}"
    state: absent
    remove_orphans: true
  when: compose_file_output.backup_file is defined

- name: Pull container images
  community.docker.docker_image:
    name: "{{ item }}"
    source: pull
  with_items:
    - "{{ infra_wireguard_container_image }}"
    - "{{ infra_wireguard_ui_container_image }}"

- name: Deploy Wireguard services
  community.docker.docker_compose_v2:
    project_src: "{{ infra_wireguard_directory_path }}"
    state: "{{ 'present' if infra_use_wireguard else 'absent' }}"
    wait: true
    wait_timeout: "{{ infra_compose_wait_timeout }}"
  register: deploy_wireguard_services_output

- name: Copy print-qr-codes util script into place
  ansible.builtin.template:
    src: print-qr-codes.sh.j2
    dest: "{{ infra_wireguard_directory_path }}/print-qr-codes.sh"
    owner: "{{ infra_wireguard_directory_owner }}"
    group: "{{ infra_wireguard_directory_group }}"
    mode: "0750"

- name: Add docker-volume-backup entries
  when: infra_backup_enabled
  ansible.builtin.set_fact:
    infra_docker_volume_backup_services_wireguard:
      - service: wireguard
        volumes:
          - "{{ infra_wireguard_volume_name_config }}"
          - "{{ infra_wireguard_ui_volume_name_data }}"
...
