---
# Environment
infra_env: "{{ lookup('env', 'ENVIRONMENT') | default('production') }}"
# Username of the user owning the files
infra_user_name: "{{ svc_user_name }}"
# Group name of the group that should own the files
infra_group_name: "{{ svc_group_name }}"
# Optionally provide the UID of the user. If absent, the UID will be looked up
infra_user_uid: "{{ svc_user_uid }}"
# Optionally provide the GID of the group. If absent, the GID will be looked up
infra_group_gid: "{{ svc_group_gid }}"
# Timezone
infra_tz: Etc/UTC
# Domain name, internal
infra_domain: "{{ svc_domain }}"
# Domain name, external
infra_domain_ext: ~

### Directories ###
# Manage directories
infra_manage_directories: true
# Directory to store service data
infra_directory_path: '/opt/infra'
# Default permissions
infra_directory_owner: "{{ infra_user_name }}"
infra_directory_group: "{{ infra_group_name }}"
infra_directory_mode: 740

### Docker ###
# Default restart policy
infra_restart_policy: always
# Max. wait time for compose deployment
infra_compose_wait_timeout: 60

### Services ###
# Whether to force pull container images
infra_force_pull: false
# Configure Graylog
infra_use_graylog: true
# Configure PiHole
infra_use_pihole: true
# Configure unbound as a recursive DNS resolver for pihole
infra_use_unbound: true
# Configure Unifi Controller
infra_use_unifi: false
# Configure MongoDB for the Unifi Controller
infra_use_unifi_db: "{{ infra_use_unifi }}"
# Configure wireguard
infra_use_wireguard: false
# Configure wireguard-ui
infra_use_wireguard_ui: false
# Configure Vaultwarden
infra_use_vaultwarden: true
# Configure Authentik
infra_use_authentik: true
# Configure godns
infra_use_godns: false
# Configure uptime-kuma
infra_use_uptimekuma: true

### Authentik ###
# Directories for Authentik
infra_authentik_directories:
  log:
    path: "{{ infra_subdirectories.log.path }}/authentik"
  data:
    path: "{{ infra_subdirectories.data.path }}/authentik"

# authentik container hostname
infra_authentik_container_hostname: authentik
# authentik version
infra_authentik_version: "2023.10.7"
# authentik container image
infra_authentik_server_container_image: "ghcr.io/goauthentik/server:{{ infra_authentik_version }}"

# authentik server container hostname
infra_authentik_server_container_hostname: "{{ infra_authentik_container_hostname }}-server"
# authentik server container memory
infra_authentik_server_container_memory: 2g

# authentik worker container hostname
infra_authentik_worker_container_hostname: "{{ infra_authentik_container_hostname }}-worker"
# authentik worker container memory
infra_authentik_worker_container_memory: 2g

# authentik redis container hostname
infra_authentik_redis_container_hostname: "{{ infra_authentik_container_hostname }}-redis"
# authentik redis version
infra_authentik_redis_version: alpine
# authentik redis container image
infra_authentik_redis_container_image: "docker.io/library/redis:{{ infra_authentik_redis_version }}"
# authentik redis container memory
infra_authentik_redis_container_memory: 1g

# authentik redis container hostname
infra_authentik_db_container_hostname: "{{ infra_authentik_container_hostname }}-db"
# authentik db version
infra_authentik_db_version: 12-alpine
# authentik postgres container image
infra_authentik_db_container_image: "docker.io/library/postgres:{{ infra_authentik_db_version }}"
# authentik postgres container memory
infra_authentik_db_container_memory: 1g


# Secret key used for Authentik cookie signing
infra_authentik_secret_key: ""
# Database user
infra_authentik_db_user: "authentik"
# Database password
infra_authentik_db_password: ""
# Database name
infra_authentik_db_name: "authentik"

# Settings for the authentik container. See https://goauthentik.io/docs/installation/configuration#authentik-settings
infra_authentik_settings:
  AUTHENTIK_COOKIE_DOMAIN: "{{ infra_domain }}"
  AUTHENTIK_LOG_LEVEL: 'INFO'
  AUTHENTIK_GEOIP: /geoip/GeoLite2-City.mmdb
  AUTHENTIK_DISABLE_UPDATE_CHECK: 'false'
  AUTHENTIK_ERROR_REPORTING__ENABLED: 'false'
  AUTHENTIK_ERROR_REPORTING__SENTRY_DSN: ""
  AUTHENTIK_ERROR_REPORTING__ENVIRONMENT: customer
  AUTHENTIK_ERROR_REPORTING__SEND_PII: 'false'
  AUTHENTIK_AVATARS: initials
  AUTHENTIK_DEFAULT_USER_CHANGE_NAME: 'true'
  AUTHENTIK_DEFAULT_USER_CHANGE_EMAIL: 'false'
  AUTHENTIK_DEFAULT_USER_CHANGE_USERNAME: 'false'
  AUTHENTIK_GDPR_COMPLIANCE: 'true'
  AUTHENTIK_DEFAULT_TOKEN_LENGTH: '60'
  AUTHENTIK_IMPERSONATION: 'false'
  AUTHENTIK_EMAIL__HOST: 'localhost'
  AUTHENTIK_EMAIL__PORT: '25'
  AUTHENTIK_EMAIL__USERNAME: ""
  AUTHENTIK_EMAIL__PASSWORD: ""
  AUTHENTIK_EMAIL__USE_TLS: 'false'
  AUTHENTIK_EMAIL__USE_SSL: 'false'
  AUTHENTIK_EMAIL__TIMEOUT: '10'
  AUTHENTIK_EMAIL__FROM: "authentik@{{ infra_domain }}"

### Graylog ###
# Directories for Graylog
infra_graylog_directories:
  log:
    path: "{{ infra_subdirectories.log.path }}/graylog"
  data:
    path: "{{ infra_subdirectories.data.path }}/graylog"

# graylog container hostname
infra_graylog_container_hostname: graylog
# graylog version
infra_graylog_version: "5.1.7"
# Graylog container image
infra_graylog_server_container_image: "graylog/graylog:{{ infra_graylog_version }}"
# Graylog server container memory
infra_graylog_server_container_memory: 4g

# graylog mongodb container hostname
infra_graylog_db_container_hostname: "{{ infra_graylog_container_hostname }}-db"
# graylog mongodb version
infra_graylog_db_version: "5.0"
# graylog mongodb container image
infra_graylog_db_container_image: "mongo:{{ infra_graylog_db_version }}"
# graylog mongodb container memory
infra_graylog_db_container_memory: 2g

# graylog opensearch container hostname
infra_graylog_opensearch_container_hostname: "{{ infra_graylog_container_hostname }}-opensearch"
# graylog opensearch version
infra_graylog_opensearch_version: "2.4.0"
# graylog opensearch container image
infra_graylog_opensearch_container_image: "opensearchproject/opensearch:{{ infra_graylog_opensearch_version }}"
# graylog opensearch container memory
infra_graylog_opensearch_container_memory: 6g

# Ports for the Graylog server
infra_graylog_server_container_ports:
  beats: 5044
  syslog: 5140
  raw: 5555
  http: 9000
  gelf: 12201
  forwarder_data: 13301
  forwarder_cfg: 13302

# Log driver for the graylog containers
infra_graylog_log_driver: local
infra_graylog_log_options:
  max-size: 20m
  max-file: '5'
  compress: 'true'

# Secret used to 'pepper' the passwords - make sure to change this BEFORE deploying.
infra_graylog_password_secret: "vSQBO0P8JLC//sWG0V1JkvRycKkDXZ6WQN4eOrrALy/JYc8nWsvxMSg29Eel1fscVUfbmpxlNmJEzYf6I3pcK1iXXpdzAhoSiV18I89N7+0QzpcI1ygANBwmRYWLd4Hp"
# Hash of the password used for the root user [run `echo -n yourpassword | shasum -a 256`]
infra_graylog_password_sha2: "f5dcec9289c446e7099d483f2ed447c990b3868a2fab4ff4a39436c63589c70e"

# Settings for the Graylog config. See https://github.com/Graylog2/graylog-docker#configuration
infra_graylog_settings: {}

### Uptime-Kuma ###
# Directories for uptime-kuma
infra_uptimekuma_directories:
  log:
    path: "{{ infra_subdirectories.log.path }}/uptimekuma"
  data:
    path: "{{ infra_subdirectories.cfg.path }}/uptimekuma"

# uptimekuma container hostname
infra_uptimekuma_container_hostname: uptime
# uptimekuma version
infra_uptimekuma_version: "1.23.11-alpine"
# uptimekuma container image
infra_uptimekuma_container_image: "louislam/uptime-kuma:{{ infra_uptimekuma_version }}"
# uptimekuma container memory
infra_uptimekuma_container_memory: 1g
# uptimekuma extra settings (env vars). See https://github.com/louislam/uptime-kuma/wiki/Environment-Variables
infra_uptimekuma_settings: {}
...
