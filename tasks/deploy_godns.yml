---
- name: Ensure godns directory is present
  ansible.builtin.file:
    path: "{{ infra_godns_directory_path }}"
    state: directory
    owner: "{{ infra_godns_directory_owner }}"
    group: "{{ infra_godns_directory_group }}"
    mode: "{{ infra_godns_directory_mode }}"

- name: Manage service files
  block:
    - name: Write godns config to file
      ansible.builtin.template:
        src: godns.yml.j2
        dest: "{{ infra_godns_config_file_path }}"
        owner: "{{ infra_godns_directory_owner }}"
        group: "{{ infra_godns_directory_group }}"
        mode: "{{ infra_godns_file_mode }}"
        backup: true
      register: godns_config_file_output

    - name: Write godns environment variables to file
      ansible.builtin.template:
        src: template.env.j2
        dest: "{{ infra_godns_env_file_path }}"
        owner: "{{ infra_godns_directory_owner }}"
        group: "{{ infra_godns_directory_group }}"
        mode: "{{ infra_godns_env_file_mode }}"
        backup: true
      vars:
        _env_vars: "{{ infra_godns_env_vars }}"
      register: godns_env_file_output

    - name: Copy compose services file into place
      ansible.builtin.template:
        src: compose/godns.yml.j2
        dest: "{{ infra_godns_compose_path }}"
        owner: "{{ infra_godns_directory_owner }}"
        group: "{{ infra_godns_directory_group }}"
        mode: "{{ infra_godns_file_mode }}"
        backup: true
        validate: docker compose -f %s config -q
      register: compose_file_output

- name: Take down services due to changed compose file
  community.docker.docker_compose_v2:
    project_src: "{{ infra_godns_directory_path }}"
    files: "{{ compose_file_output.backup_file }}"
    state: absent
    remove_orphans: true
  when: compose_file_output.backup_file is defined

- name: Pull container images
  community.docker.docker_image:
    name: "{{ item }}"
    source: pull
  with_items:
    - "{{ infra_godns_container_image }}"

- name: Deploy godns services
  community.docker.docker_compose_v2:
    project_src: "{{ infra_godns_directory_path }}"
    state: "{{ 'present' if infra_use_godns else 'absent' }}"
    wait: true
    wait_timeout: "{{ infra_compose_wait_timeout }}"
  register: deploy_godns_services_output

...
